<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yzj.core.dao.DictMapper">
    <resultMap id="BaseResultMap" type="com.yzj.core.entity.po.Dict">
        <constructor>
            <idArg column="dict_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="dict_type_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="dict_type_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="dict_item_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="dict_item_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="dict_sort" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="dict_enable" javaType="java.lang.Boolean" jdbcType="BIT"/>
            <arg column="dict_memo" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    dict_id, dict_type_code, dict_type_name, dict_item_name, dict_item_code, dict_sort, 
    dict_enable, dict_memo
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dict
        where dict_id = #{dictId,jdbcType=VARCHAR}
    </select>

    <select id="selectByTypeCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dict
        where dict_type_code = #{dictTypeCode,jdbcType=VARCHAR}
        and dict_enable = '1'
        ORDER BY dict_item_code DESC
    </select>

    <select id="selectByTypeCodeAndItemCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dict
        where dict_type_code = #{dictTypeCode,jdbcType=VARCHAR}
        and dict_item_code = #{dictItemCode,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dict
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.yzj.core.entity.po.Dict">
    insert into dict (dict_id, dict_type_code, dict_type_name, 
      dict_item_name, dict_item_code, dict_sort, 
      dict_enable, dict_memo)
    values (#{dictId,jdbcType=VARCHAR}, #{dictTypeCode,jdbcType=VARCHAR}, #{dictTypeName,jdbcType=VARCHAR}, 
      #{dictItemName,jdbcType=VARCHAR}, #{dictItemCode,jdbcType=VARCHAR}, #{dictSort,jdbcType=INTEGER}, 
      #{dictEnable,jdbcType=BIT}, #{dictMemo,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.yzj.core.entity.po.Dict">
        insert into dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dictId != null">
                dict_id,
            </if>
            <if test="dictTypeCode != null">
                dict_type_code,
            </if>
            <if test="dictTypeName != null">
                dict_type_name,
            </if>
            <if test="dictItemName != null">
                dict_item_name,
            </if>
            <if test="dictItemCode != null">
                dict_item_code,
            </if>
            <if test="dictSort != null">
                dict_sort,
            </if>
            <if test="dictEnable != null">
                dict_enable,
            </if>
            <if test="dictMemo != null">
                dict_memo,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dictId != null">
                #{dictId,jdbcType=VARCHAR},
            </if>
            <if test="dictTypeCode != null">
                #{dictTypeCode,jdbcType=VARCHAR},
            </if>
            <if test="dictTypeName != null">
                #{dictTypeName,jdbcType=VARCHAR},
            </if>
            <if test="dictItemName != null">
                #{dictItemName,jdbcType=VARCHAR},
            </if>
            <if test="dictItemCode != null">
                #{dictItemCode,jdbcType=VARCHAR},
            </if>
            <if test="dictSort != null">
                #{dictSort,jdbcType=INTEGER},
            </if>
            <if test="dictEnable != null">
                #{dictEnable,jdbcType=BIT},
            </if>
            <if test="dictMemo != null">
                #{dictMemo,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yzj.core.entity.po.Dict">
        update dict
        <set>
            <if test="dictTypeCode != null">
                dict_type_code = #{dictTypeCode,jdbcType=VARCHAR},
            </if>
            <if test="dictTypeName != null">
                dict_type_name = #{dictTypeName,jdbcType=VARCHAR},
            </if>
            <if test="dictItemName != null">
                dict_item_name = #{dictItemName,jdbcType=VARCHAR},
            </if>
            <if test="dictItemCode != null">
                dict_item_code = #{dictItemCode,jdbcType=VARCHAR},
            </if>
            <if test="dictSort != null">
                dict_sort = #{dictSort,jdbcType=INTEGER},
            </if>
            <if test="dictEnable != null">
                dict_enable = #{dictEnable,jdbcType=BIT},
            </if>
            <if test="dictMemo != null">
                dict_memo = #{dictMemo,jdbcType=VARCHAR},
            </if>
        </set>
        where dict_id = #{dictId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yzj.core.entity.po.Dict">
    update dict
    set dict_type_code = #{dictTypeCode,jdbcType=VARCHAR},
      dict_type_name = #{dictTypeName,jdbcType=VARCHAR},
      dict_item_name = #{dictItemName,jdbcType=VARCHAR},
      dict_item_code = #{dictItemCode,jdbcType=VARCHAR},
      dict_sort = #{dictSort,jdbcType=INTEGER},
      dict_enable = #{dictEnable,jdbcType=BIT},
      dict_memo = #{dictMemo,jdbcType=VARCHAR}
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </update>
</mapper>